<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bit.data.dao.UserDao">
	<!-- 친구목록 조회 -->
	<select id="getUserFriendData" parameterType="HashMap" resultType="userDto">
		select * from user where nickname like CONCAT('%',#{search},'%') and num in (select friendNum from userFriend where userNum=#{userNum})
	</select>
	<!-- 친구인원수 조회 -->
	<select id="getUserFriendCount" parameterType="int" resultType="int">
		select count(*) from user where num in (select friendNum from userFriend where userNum=${userNum})
	</select>
	<!-- 개인회원가입-->
	<insert id="insertUser" parameterType="userDto">
		insert into user values (null,#{email},#{password},#{nickname},#{profileImage},#{phone},#{address},#{gender},#{point},#{year},#{date},#{loginType},now(),#{isAdmin},#{salt})		
	</insert>
	<!-- 개인회원가입 중복체크 -->
	<select id="getUserIdSearch" parameterType="String" resultType="int">
		select sum(cnt) from (select count(*) cnt from user where email=#{email} union all select count(*) cnt from seller where email=#{email}) as t
	</select>
	<!-- 로그인 -->
	<select id="loginIdPassCheck" parameterType="Map" resultType="int">
		select count(*) from user where email=#{loginid} and password=#{loginpass}
	</select>
	<!-- 로그인 후 아이디 및 사진 출력 및 salt 값 -->
	<select id="getDataById" parameterType="String" resultType="userDto">
		select * from user where email=#{email}
	</select>
	
	<!--리뷰페이지 유저정보 -->
	<select id="getReviewUserInfo" parameterType="int"  resultType="userDto">
		select * from user u where num in (select userNum from review r where r.userNum=u.num)
	</select>
	
	<!-- 친구 아닌 모든 유저 조회 -->
	<select id="selectNonFriendlyUsersList" parameterType="int"  resultType="userDto">
		select * from user where num not in(select friendNum from userFriend) and num not in(#{userNum});
	</select>

	<!--유저 업데이트 -->
	<update id="updateUser" parameterType="userDto">
		update user set profileImage=#{profileImage},password=#{password},nickname=#{nickname},phone=#{phone},address=#{address},salt=#{salt},status=#{status} where email=#{email}
	</update>

	<!-- 마이페이지 내 문의내역 -->
	<select id="getQnaList" parameterType="int" resultType="qnaDto">
		select *
		  from qna as qa
		   join qnaCategory as qc
		    on qa.qnaCategoryNum = qc.num
		     where userNum=#{userNum}
	</select>

</mapper>